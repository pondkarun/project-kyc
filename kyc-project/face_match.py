import face_recognition
import os

# ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
img_id = face_recognition.load_image_file("images/id_card_pond.jpg")
img_selfie = face_recognition.load_image_file("images/selfie_pond.jpg")
img_with_id = face_recognition.load_image_file("images/selfie_with_id_pond.jpg")

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á face encoding
def get_encoding(image, label="unknown"):
    encodings = face_recognition.face_encodings(image)
    if len(encodings) == 0:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏ô: {label}")
        return None
    return encodings[0]

# ‡∏î‡∏∂‡∏á encodings
enc_id = get_encoding(img_id, "‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô")
enc_selfie = get_encoding(img_selfie, "‡πÄ‡∏ã‡∏•‡∏ü‡∏µ‡πà")
enc_with_id = get_encoding(img_with_id, "‡∏ñ‡∏∑‡∏≠‡∏ö‡∏±‡∏ï‡∏£")

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤
def compare_faces(known, test, label="‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"):
    if known is None or test is None:
        print(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö {label} ‡πÑ‡∏î‡πâ")
        return 0
    distance = face_recognition.face_distance([known], test)[0]
    similarity = max(0, (1 - distance)) * 100
    print(f"‚úÖ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤ {label}: {similarity:.2f}%")
    return similarity

# ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏ó‡∏±‡πâ‡∏á 3 ‡∏Ñ‡∏π‡πà
score1 = compare_faces(enc_id, enc_selfie, "ID ‚Üî Selfie")
score2 = compare_faces(enc_id, enc_with_id, "ID ‚Üî ‡∏ñ‡∏∑‡∏≠‡∏ö‡∏±‡∏ï‡∏£")
score3 = compare_faces(enc_selfie, enc_with_id, "Selfie ‚Üî ‡∏ñ‡∏∑‡∏≠‡∏ö‡∏±‡∏ï‡∏£")

# ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•
avg_score = round((score1 + score2 + score3) / 3, 2)
print(f"\nüéØ ‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤: {avg_score:.2f}%")